.base-rules:
  rules:
    - when: manual
      allow_failure: true

stages: 
  - build
  - deploy_dev
  - deploy_qa

variables:
  ENV:
    value: "dev"
  TAG:
    value: "${CI_COMMIT_SHA}"

dashboard_app_build:
  stage: build
  environment:
    name: $ENV
  tags:
    - dex
  variables:
    MODULE: 'dashboard-app'
  extends:
    # - .base-rules
    - .build_image

dev_dashboard_app_deploy:
  stage: deploy_dev
  tags:
    - dex
  variables:
    MODULE: 'dashboard-app'
    TARGET: "dex-dev"
  extends:
    # - .base-rules
    - .deploy_app
  needs:
    - job: dashboard_app_build
      artifacts: true

qa_dashboard_app_deploy:
  stage: deploy_qa
  tags:
    - dex
  variables:
    MODULE: 'dashboard-app'
    TARGET: "dex-qa"
  extends:
    - .base-rules
    - .deploy_app
  needs:
    - job: dashboard_app_build
      artifacts: true

.build_image:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - mkdir -p /kaniko/.docker
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/${DIR}/Dockerfile"
      --destination "harbor.hub.hashkey.com/dex/${MODULE}:${TAG}"

.deploy_app:
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  before_script:
    - mkdir -p $HOME/.kube
    - echo -n "${KUBE_CONFIG}" | base64 -d > $HOME/.kube/config
  script:
    - kubectl -n ${TARGET} set image deployment/${MODULE} ${MODULE}=harbor.hub.hashkey.com/dex/${MODULE}:${TAG}